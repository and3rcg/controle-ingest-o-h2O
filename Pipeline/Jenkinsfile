pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('token-dockerhub') // ID das credenciais do Docker Hub no Jenkins
        GITHUB_CREDENTIALS = credentials('github-token') // ID das credenciais do GitHub no Jenkins
        REPO = 'arimateiajuniorunifor/controle-ingest-o-h2O' // Nome do seu repositório no GitHub, sem a URL completa
        DOCKERHUB_REPO = 'arimateiajunior/controle-h2o' // Nome do seu repositório no Docker Hub
        TAG = "v${env.BUILD_NUMBER}" // Tag baseada no número do build do Jenkins
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: env.GITHUB_CREDENTIALS, url: "https://github.com/${env.REPO}.git"
            }
        }

        stage('Build Docker Images') {
            steps {
                sh 'docker-compose build'
            }
        }

        stage('Tag and Push to Docker Hub') {
            steps {
                script {
                    def services = ['frontend', 'backend', 'prometheus', 'grafana']
                    services.each { service ->
                        sh "docker tag ${service}:latest ${env.DOCKERHUB_REPO}/${service}:${env.TAG}"
                        sh "docker push ${env.DOCKERHUB_REPO}/${service}:${env.TAG}"
                    }
                }
            }
        }

        stage('Test Backend') {
            steps {
                sh 'docker-compose up -d backend'
                // Adicione aqui os comandos para rodar os testes no container do backend
                sh 'docker-compose exec backend run-tests-script.sh' // Exemplo de comando de teste
                sh 'docker-compose down'
            }
        }

        stage('Deploy to Production') {
            steps {
                sh 'docker-compose up -d'
            }
        }
    }

    post {
        always {
            sh 'docker-compose down'
        }
        success {
            echo 'Pipeline executado com sucesso!'
        }
        failure {
            echo 'Pipeline falhou.'
        }
    }
}
